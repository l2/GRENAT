<?xml version="1.0" encoding="ISO-8859-1" ?>
<!-- Revision Id: $Id: demo-modelComparison.xml 6377 2009-12-11 11:20:29Z dgorissen $ -->

<!-- This file a simple demonstration (but by no means complete, fully accurate or fair !!!!) of
 how you could use the SUMO Toolbox to compare different techniques on a fixed dataset (no sampling) -->

<ToolboxConfiguration version="7.0">
	
      <Plan>
	
	  <ContextConfig>default</ContextConfig>
	  <SUMO>default</SUMO>
	  <InitialDesign>lhdWithCornerPoints</InitialDesign>
	  
	  <!-- Note that we disable sample selection by commenting out the relevant tag -->
	  <!--<SampleSelector>default</SampleSelector>-->

	  <!-- We use a simple 1D dataset -->
	  <Simulator>Thurber</Simulator>
	  <SampleEvaluator>scatteredDataset</SampleEvaluator>

	  <Measure type="CrossValidation" target=".01" errorFcn="rootRelativeSquareError" use="on">
		  <Option key="folds" value="5"/>
	  </Measure>	

	  <!-- We define 3 runs, these will be run one after the other -->

	  <!-- Note the spline model requires the Matlab Spline Toolbox, if you dont have it,
		install the extension pack and use krigingps, or something else -->
	  <Run name="Thurber_spline" repeat="1">			
	    <AdaptiveModelBuilder>splinesps</AdaptiveModelBuilder>
	  </Run>

	  <Run name="Thurber_rbfgenetic" repeat="1">			
	    <AdaptiveModelBuilder>rbfgenetic</AdaptiveModelBuilder>
	  </Run>

	  <Run name="Thurber_rational" repeat="1">			
	    <AdaptiveModelBuilder>rational</AdaptiveModelBuilder>
	  </Run>
	</Plan>

	<!-- You can then use the helper scripts in src/scripts/matlab to help you analyze the results -->

	<!-- All the rest is pretty much the same as in default.xml (a few small changes have been made) -->

	<!-- /////////////////////////////////////////////////////////////////////// -->

	<!-- General configuration section -->
	<ContextConfig id="default">
		<OutputDirectory>output</OutputDirectory>
		<PlotOptions>
			<Option key="saveModels" value="true"/>
			<Option key="plotModels" value="true"/>
			<Option key="withContour" value="true"/>
			<Option key="plotContour" value="false" />
			<Option key="outputType" value="png"/>
		</PlotOptions>

        <Option key="keepOldModels" value="off"/>
		<Option key="parallelMode" value="off"/>
				
		<Profiling>
			<Profiler name=".*" enabled="true">
    			<Output type="toTable"/>
				<Output type="toImage"/>
				<Output type="toFile"/>
                <Output type="toPanel"/>
			</Profiler>		
		</Profiling>
		
	</ContextConfig>
	
	<!-- /////////////////////////////////////////////////////////////////////// -->
	<!-- The logging configuration should be left alone under normal circumstances -->
	<Logging>

		<RootLogger>
		
			<!-- log all run-specific information in the main log as well -->
			<Option key="runsInMainLog" value="true"/>
		
			<!-- Set the default logging level for the root logger -->
			<Option key="Level" value="INFO"/>

			<!-- Specify the handlers to create in the root logger
			 (all loggers are children of the root logger)
			 The following creates two handlers -->		
			<Handlers>
				<!-- Configure ConsoleHandler instances -->
				<ConsoleHandler>
					<Option key="Level" value="INFO"/>
				</ConsoleHandler>

				<!-- Configure FileHandler instances -->
				<FileHandler>
					<Option key="Level" value="ALL"/>
				</FileHandler>
			</Handlers>
		</RootLogger>
		
		<!-- The Options here specify the level for a specific logger -->
		<!-- <Option key="loggername" value="level" /> -->
		<Option key="ibbt.sumo" value="FINEST"/> 
		<Option key="Matlab" value="FINEST"/> 
	</Logging>


	<SUMO id="default" type="SUMO">
		<Option key="createMovie" value="yes"/>
		<Option key="minimumTotalSamples" value="0"/>
		<Option key="maximumTotalSamples" value="1000"/>
		<Option key="maximumTime" value="Inf"/>
		<Option key="maxModelingIterations" value="2"/>
		<Option key="seedRandomState" value="default"/>			
		<Option key="stopOnError" value="true"/>
		<Option key="minimumInitialSamples" value="100%"/>
		<Option key="maximumSamples" value="10"/>
		<Option key="minimumAdaptiveSamples" value="0" />
	</SUMO>
	
	<!-- /////////////////////////////////////////////////////////////////////// -->
	
	<SampleEvaluator id="scatteredDataset" type="ibbt.sumo.sampleevaluators.datasets.ScatteredDatasetSampleEvaluator">
		<!-- Using an ID you can specify which dataset from the simulator file to use -->
		<!-- <Option key="id" value="someDataset"/> -->
	</SampleEvaluator>
	
	<!-- /////////////////////////////////////////////////////////////////////// -->
	
	<!-- Build rational models -->
	<AdaptiveModelBuilder id="rational" type="SequentialModelBuilder" combineOutputs="true">
		<!-- Maximum number of models built before selecting new samples -->	
		<Option key="maximumRunLength" value="30"/>
		<!-- Degeneration of score if a model gets older -->
		<Option key="decay" value=".99"/>
		<!-- Size of the best model history -->
		<Option key="historySize" value="15"/>
		<!-- One of best, last. When set to best the best `historySize' models are kept,
		 - - when set to last, the last `historySize' models are kept -->
		<Option key="strategy" value="best"/>
		<!-- <Option key="strategy" value="window"/> -->
		
		<ModelFactory type="RationalFactory">
			<!-- Bounds for the weights of the rational modeller -->
			<Option key="weightBounds" value="1,40"/>
			<!-- Bounds for the percentage of degrees of freedom wrt number of samples -->
			<Option key="percentBounds" value="1,100"/>
			<!-- Regardless of the percentage bounds, never use more than this many degrees of freedom -->
			<Option key="maxDegrees" value="80"/>
			<!-- When randomizing rational flags, what percentage should be set -->
			<Option key="percentRational" value="70"/>
			<!-- If a variable is named "f" of "frequency" it will be modelled differently, if this is set to auto,
			 - - If this field is set to a variable name, that variable will be considered to be the frequency -->
			<Option key="frequencyVariable" value="auto"/>
			<!-- Base function for interpolation, one of chebyshev, power, legendre -->
			<Option key="basis" value="power"/>
		</ModelFactory>
	</AdaptiveModelBuilder>

	
	<!-- Build Radial Basis Function models using a genetic algorithm -->
	<AdaptiveModelBuilder id="rbfgenetic" type="GeneticModelBuilder" combineOutputs="false">
		<Option key="restartStrategy"	value="continue"/>
		<!--See that matlab gads toolbox documentation for more information on the options-->
		<Option key="populationType" value="custom"/>
		<Option key="populationSize" value="15"/>
		<Option key="crossoverFraction" value="0.7"/>
		<Option key="maxGenerations" value="10"/>
		<Option key="eliteCount" value="1"/>
		<Option key="stallGenLimit" value="4"/>
		<Option key="stallTimeLimit" value="Inf"/>
		
		<ModelFactory type="BFFactory">
			<Option key="type" value="RBF"/>
			
			<Option key="crossoverFcn" value="crossover"/>
			<Option key="mutationFcn" value="mutation"/>
			<Option key="creationFcn" value="createInitialPopulation"/>
			
			<!-- Bounds for the shape parameter -->
			<BasisFunction name="gaussian"     min=".1"    max="5"    scale="ln"/>
			<BasisFunction name="multiquadric" min=".1"    max="5"    scale="ln"/>
			<!-- <BasisFunction name="biharmonic"   min=".1"    max="5"    scale="ln"/> -->
			<BasisFunction name="exponential"  min=".1,.5" max="5,2"  scale="ln,lin"/>
			
			<Option key="regression" value="-1,0,1,2"/>
			<!-- Basisfunction, one of 'multiquadric', 'triharmonic', 'biharmonic' -->
			<!-- Specify which implementation to use, currently, 'Direct', 'AP', 'Greedy' and
			'FastRBF' are supported.
			
			'Direct' solves the direct problem by inverting the interpolation
			matrix
			'AP' uses an alternating projections method when the system gets
			too large. This is *MUCH* slower than 'Direct', and doesn't
			guarantee convergence, use with caution
			'Greedy' uses a one point greedy algorithm for selecting the 
			interpolation centers. Same remark applies as with 'AP'
			'FastRBF' interfaces the FastRBF library. When using FastRBF, 
			make sure your copy of the software is installed under 
			the src/matlab/contrib directory and that the software 
			is licensed properly.
			The FastRBF matlab toolbox can be found at
			http://www.farfieldtechnology.com
			-->
			<Option key="backend" value="AP"/>
		</ModelFactory>
	</AdaptiveModelBuilder>
<!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

	<!-- Build spline models using the Pattern Search modelbuilder -->
	<AdaptiveModelBuilder id="splinesps" type="OptimizerModelBuilder" combineOutputs="false">
		<!-- Re-start strategy for resuming the optimization process between sampling iterations.
		     One of 'random','continue','model' and 'intelligent' (Default).  See the docs for more information -->
		<Option key="restartStrategy"	value="intelligent"/>
		
		<Optimizer type="MatlabPatternSearch">
			<Option key="maxIterations" value="100"/>
			<Option key="maxFunEvals" value="20"/>
			<Option key="searchMethod" value="GPSPositiveBasis2N"/>
			<Option key="pollMethod" value="MADSPositiveBasis2N"/>			
		</Optimizer>
		
		<ModelFactory id="spline" type="SplineFactory">
			<Option key="smoothingBounds" value="0,1"/>				
		</ModelFactory>
	</AdaptiveModelBuilder>

	<!-- Specifies a combined Latin HyperCube and FactorialDesign -->
	<InitialDesign id="lhdWithCornerPoints" type="CombinedDesign">
		<!-- Select samples in a Latin Hypercube Design -->
		<InitialDesign type="LatinHypercubeDesign">
			<!-- how many points to generate -->
			<Option key="points" value="20"/>
			<!--<Option key="weight" value="0.5"/>-->
			<!--<Option key="coolingFactor" value="0.9"/>-->
			<!--<Option key="p" value="5.0"/>-->
		</InitialDesign>

		<InitialDesign type="FactorialDesign">
			<!-- how many points to generate for each dimension as a vector -->
			<!-- a scalar value (l) is the same as [l l ... l] (length of input dimension) -->
			<Option key="levels" value="2" />
		</InitialDesign>
	</InitialDesign>
	

</ToolboxConfiguration>

