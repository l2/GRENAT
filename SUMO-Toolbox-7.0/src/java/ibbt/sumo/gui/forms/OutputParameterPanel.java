/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OutputParameterPanel.java
 *
 * Created on Jul 8, 2009, 7:03:23 PM
 */

package ibbt.sumo.gui.forms;

import ibbt.sumo.gui.context.OutputElement;
import ibbt.sumo.gui.util.ParameterInfo;

/**
 *
 * @author theking
 */
public class OutputParameterPanel extends javax.swing.JPanel {
    private final ParameterInfo info;

    /** Creates new form OutputParameterPanel */
    public OutputParameterPanel(ParameterInfo pi) {
        this.info = pi;
        initComponents();
        setValues();
    }

    /** Sets the value of the componenets on the panel.
     *
     */
    public void setValues() {
        this.outputName.setText(this.info.getName());
        this.outputName.setSelected(true);
        if (!this.info.getType().equals("real")){
            this.outputType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "real", "phase", "complex", "imaginary", "split", "modulus" }));
            this.outputType.setSelectedItem(this.info.getType());
        }
        else{
            this.outputType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "real" }));
            this.outputType.setSelectedItem(this.info.getType());
        }
//        this.outputValue.setText(this.info.getValue());
//        this.outputMinValue.setText(this.info.getMin());
//        this.outputMaxValue.setText(this.info.getMax());
    }

    /**
     * Checks if the output parameter is selected
     *
     */
    public boolean isSelected(){
        return this.outputName.isSelected();
    }

    /**
     *
     * @return
     */
    public String getOutputName() {
        return this.outputName.getText();
    }

    /**
     *
     * @return
     */
    public String getOutputType() {
        return this.outputType.getSelectedItem().toString();
    }

    /**
     * Return the parameter information selected by the user
     *
     * @return 
     */
    public ParameterInfo getParameterInfo(){
        String name = this.outputName.getText();
        String type = this.outputType.getSelectedItem().toString();
//        String value = this.outputValue.getText();
//        String min = this.outputMinValue.getText();
//        String max = this.outputMaxValue.getText();
        return new ParameterInfo(name, type, null , null, null, null);
    }

    /**
     * 
     * @return
     */
    public OutputElement getOutputElement(){
        return new OutputElement(this.getParameterInfo());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        outputName = new javax.swing.JCheckBox();
        typePanel = new javax.swing.JPanel();
        typeLabel = new javax.swing.JLabel();
        outputType = new javax.swing.JComboBox();
        resetAllValue = new javax.swing.JButton();

        outputName.setText("Name");
        outputName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputNameActionPerformed(evt);
            }
        });

        typeLabel.setFont(new java.awt.Font("Lucida Grande", 1, 13));
        typeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        typeLabel.setText("Complex handeling:");

        outputType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "real" }));
        outputType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "real" }));

        org.jdesktop.layout.GroupLayout typePanelLayout = new org.jdesktop.layout.GroupLayout(typePanel);
        typePanel.setLayout(typePanelLayout);
        typePanelLayout.setHorizontalGroup(
            typePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, typePanelLayout.createSequentialGroup()
                .add(typeLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 20, Short.MAX_VALUE)
                .add(outputType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 116, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        typePanelLayout.setVerticalGroup(
            typePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(typePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(outputType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(typeLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        resetAllValue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ibbt/sumo/gui/inputfiles/reset_icon.gif"))); // NOI18N
        resetAllValue.setToolTipText("Set all value to default");
        resetAllValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetAllValueActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(outputName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                .add(18, 18, 18)
                .add(typePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(97, 97, 97)
                .add(resetAllValue, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                .add(resetAllValue)
                .add(outputName)
                .add(typePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void outputNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputNameActionPerformed
        this.outputType.setEnabled(this.outputName.isSelected());
        this.typeLabel.setEnabled(this.outputName.isSelected());
}//GEN-LAST:event_outputNameActionPerformed

    private void resetAllValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetAllValueActionPerformed
        this.setValues();
}//GEN-LAST:event_resetAllValueActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox outputName;
    private javax.swing.JComboBox outputType;
    private javax.swing.JButton resetAllValue;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JPanel typePanel;
    // End of variables declaration//GEN-END:variables

    public void setSelected(boolean b) {
        throw new UnsupportedOperationException("Not yet implemented");
    }
}
