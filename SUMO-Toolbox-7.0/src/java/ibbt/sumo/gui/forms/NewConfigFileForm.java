/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewConfigFileForm.java
 *
 * Created on Jul 8, 2009, 1:16:30 PM
 */

package ibbt.sumo.gui.forms;

import ibbt.sumo.gui.context.ConfigXMLFile;
import ibbt.sumo.gui.context.DefaultXMLFile;
import ibbt.sumo.gui.context.SimulatorXMLFile;
import ibbt.sumo.gui.context.ToolboxConfigurationFile;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author theking
 */
public class NewConfigFileForm extends javax.swing.JDialog {
    private SimulatorXMLFile simulator;
    private DefaultXMLFile defualt;
    
    private SimulatorTab simulatorTab;
    private InputOutputTab input_outputTab;
    private PlanElementTab planElementTab;
    private RunElementsTab runElementsTab;

    /**
     * 
     * @param defXML
     * @param simXML
     */
    public NewConfigFileForm(DefaultXMLFile defXML, SimulatorXMLFile simXML) {
        this.defualt = defXML;
        this.simulator = simXML;
        initComponents();
        initNewConfigTabs();
    }

    public NewConfigFileForm(ConfigXMLFile confXML){
        this.defualt = confXML;
        this.simulator = confXML.getSimXMLFile();
        initComponents();
        initEditConfigTabs();
    }

    /**
     *
     */
    public void initEditConfigTabs() {
        ConfigXMLFile config = (ConfigXMLFile) this.defualt;
        if (this.simulator != null)
            this.simulatorTab = new SimulatorTab(this, this.simulator);
        else
            this.simulatorTab = new SimulatorTab(this);

        this.input_outputTab = new InputOutputTab(this, config);
        this.planElementTab = new PlanElementTab(this, config);
        this.runElementsTab = new RunElementsTab(this, config);


        this.contentPane.addTab("Simulator", this.simulatorTab);
        this.contentPane.addTab("Input/Output", this.input_outputTab);
        this.contentPane.addTab("Plan element", this.planElementTab);
        this.contentPane.addTab("Run elements", this.runElementsTab);
    }

    /**
     *
     */
    public void initNewConfigTabs(){
        this.simulatorTab = new SimulatorTab(this, this.simulator);
        this.input_outputTab = new InputOutputTab(this, this.simulator);
        this.planElementTab = new PlanElementTab(this, this.defualt, this.simulator);
        this.runElementsTab = new RunElementsTab(this, this.defualt, this.simulator);
        

        this.contentPane.addTab("Simulator", this.simulatorTab);
        this.contentPane.addTab("Input/Output", this.input_outputTab);
        this.contentPane.addTab("Plan element", this.planElementTab);
        this.contentPane.addTab("Run elements", this.runElementsTab);
    }    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPane = new javax.swing.JTabbedPane();
        buttonPanel = new javax.swing.JPanel();
        finish = new javax.swing.JButton();
        cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        contentPane.setToolTipText("Load a simulator file");

        finish.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ibbt/sumo/gui/inputfiles/XMLFile_icon.png"))); // NOI18N
        finish.setText("Finish");
        finish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishActionPerformed(evt);
            }
        });
        buttonPanel.add(finish);

        cancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ibbt/sumo/gui/inputfiles/cancel_icon.gif"))); // NOI18N
        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        buttonPanel.add(cancel);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(contentPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 932, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(337, 337, 337)
                .add(buttonPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 244, Short.MAX_VALUE)
                .add(351, 351, 351))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(contentPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(buttonPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     *
     */
    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelActionPerformed

    private void finishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishActionPerformed
       if (this.input_outputTab.atLeastOneInputSelected()
               && this.input_outputTab.atLeastOneOutputSelected()){
            ToolboxConfigurationFile newConfigFile = new ToolboxConfigurationFile(defualt);
            newConfigFile.addPlan(this.planElementTab.getPlanElement());
            newConfigFile.addInputParameters(this.input_outputTab.getInputParameters());
            newConfigFile.addOutputParameters(this.input_outputTab.getOutputParameters());
            newConfigFile.addRuns(this.runElementsTab.getRunElements());

            SummaryFrame sf = new SummaryFrame(this, newConfigFile);  

            this.setVisible(false);
            sf.setModal(true);
            sf.setPreview(sf.getTreeModel(newConfigFile.write().getRootElement()));
            sf.setVisible(true);
        }
        else{
            String msg = "You have to select at least one input and one output parameter!";
            JOptionPane.showMessageDialog(new JFrame(), msg, "Warning", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_finishActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancel;
    private javax.swing.JTabbedPane contentPane;
    private javax.swing.JButton finish;
    // End of variables declaration//GEN-END:variables


}
