/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SettingsFrame.java
 *
 * Created on Aug 9, 2009, 4:06:40 PM
 */

package ibbt.sumo.gui.forms;

import ibbt.sumo.gui.context.Settings;
import ibbt.sumo.gui.util.XMLFileFilter;

import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;

/**
 *
 * @author Sasa Berberovic
 */
public class SettingsFrame extends JDialog {
    private MainForm main;
    private Settings settings;

    /** Creates new form SettingsFrame */
    public SettingsFrame() {
        initComponents();
    }

    /**
     *
     * @param parent
     */
    public SettingsFrame(MainForm parent) {
        this.main = parent;
        this.setTitle("Settings");
        
        initComponents();
        this.pathTextField.setEnabled(this.pathCheckBox.isSelected());
        this.openButton.setEnabled(this.pathCheckBox.isSelected());
        
        this.openButton.setIcon(new javax.swing.ImageIcon("sumo.ico"));
    }

    /**
     * 
     * @param parent
     * @param defaultPath
     */
    public SettingsFrame(MainForm parent, String defaultPath) {
        this.main = parent;
        this.setTitle("Settings");
        
        initComponents();
        initSettings();
    }

    /**
     *
     */
    public void initSettings() {
       this.settings = new Settings();
       this.settings.load();
       this.pathCheckBox.setSelected(this.settings.useDefaultXMLPath());
       this.pathTextField.setText(this.settings.getDefaultXMLPath());
       this.pathTextField.setEnabled(this.pathCheckBox.isSelected());
       this.openButton.setEnabled(this.pathCheckBox.isSelected());
       
    }

    public void setSettings(){
        this.settings.setDefaultXML(this.pathTextField.getText());
        this.settings.setUseDefaultXMLPath(this.pathCheckBox.isSelected());
        this.settings.wrtieChanges();
    }
    
    public String getDefaultPath(){
    	return this.pathTextField.getText().trim();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        defaultPathPanel = new javax.swing.JPanel();
        pathCheckBox = new javax.swing.JCheckBox();
        pathTextField = new javax.swing.JTextField();
        openButton = new javax.swing.JButton();
        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        defaultPathPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Select custom default.xml"));
        defaultPathPanel.setLayout(new javax.swing.BoxLayout(defaultPathPanel, javax.swing.BoxLayout.LINE_AXIS));

        pathCheckBox.setText("Custom config template file:");
        pathCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathCheckBoxActionPerformed(evt);
            }
        });
        defaultPathPanel.add(pathCheckBox);

        pathTextField.setText("jTextField1");
        defaultPathPanel.add(pathTextField);

        openButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ibbt/sumo/gui/inputfiles/load_icon.gif"))); // NOI18N
        openButton.setText("Open");
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });
        defaultPathPanel.add(openButton);

        okButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ibbt/sumo/gui/inputfiles/ok_icon.gif"))); // NOI18N
        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(okButton);

        cancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ibbt/sumo/gui/inputfiles/cancel_icon.gif"))); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(cancelButton);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(defaultPathPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 619, Short.MAX_VALUE)
            .add(buttonPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(defaultPathPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(buttonPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        if (this.pathCheckBox.isSelected()){
            this.main.setDefaultPath(this.pathTextField.getText());
            this.setSettings();
        }
        else
            this.main.setDefaultPath("");{
            this.setSettings();
        }
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setFileFilter(new XMLFileFilter());

        JFrame f = new JFrame();
        f.setTitle("Select custom default.xml");

        if (jfc.showOpenDialog(f) == JFileChooser.APPROVE_OPTION)
        {
            this.pathTextField.setText(jfc.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_openButtonActionPerformed

    private void pathCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathCheckBoxActionPerformed
        this.pathTextField.setEnabled(this.pathCheckBox.isSelected());
        this.openButton.setEnabled(this.pathCheckBox.isSelected());
    }//GEN-LAST:event_pathCheckBoxActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SettingsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel defaultPathPanel;
    private javax.swing.JButton okButton;
    private javax.swing.JButton openButton;
    private javax.swing.JCheckBox pathCheckBox;
    private javax.swing.JTextField pathTextField;
    // End of variables declaration//GEN-END:variables


}
