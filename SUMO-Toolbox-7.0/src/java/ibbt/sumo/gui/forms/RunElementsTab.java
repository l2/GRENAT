/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RunElementsPanel.java
 *
 * Created on Jul 9, 2009, 7:14:57 PM
 */

package ibbt.sumo.gui.forms;

import ibbt.sumo.gui.context.ConfigXMLFile;
import ibbt.sumo.gui.context.DefaultXMLFile;
import ibbt.sumo.gui.context.RunElement;
import ibbt.sumo.gui.context.SimulatorXMLFile;

import java.util.Vector;

import javax.swing.JScrollPane;

/**
 * Whith panel the user can add run elements to his/hers configuration file.
 *
 * @author Sasa Berberovic
 */
public class RunElementsTab extends javax.swing.JPanel {
    private int runIndex = 1;

    private NewConfigFileForm parent;

    private DefaultXMLFile defXML;
    private SimulatorXMLFile simXML;
    

    /**
     * Create RunElementTab when the user wants to make a new configuration file.
     *
     * @param parent
     * @param defualt
     * @param simulator
     */
    public RunElementsTab(NewConfigFileForm parent, DefaultXMLFile defualt, SimulatorXMLFile simulator) {
        this.parent = parent;
        this.defXML = defualt;
        this.simXML = simulator;

        initComponents();
    }

    /**
     * Create RunElementTab when the user wants to edit an existing configuration file.
     *
     * @param parent
     * @param config
     */
    public RunElementsTab(NewConfigFileForm parent, ConfigXMLFile config) {
        this.parent = parent;
        this.defXML = config;
        this.simXML = config.getSimXMLFile();

        this.initComponents();
        this.initTab();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addRunButton = new javax.swing.JButton();
        description = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        runsPanel = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(869, 490));

        addRunButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ibbt/sumo/gui/inputfiles/add_icon.png"))); // NOI18N
        addRunButton.setText("Add run ...");
        addRunButton.setToolTipText("Add new run element");
        addRunButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRunButtonActionPerformed(evt);
            }
        });

        description.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ibbt/sumo/gui/inputfiles/sumo1.png"))); // NOI18N
        description.setText("Add run elements to the configuration file.");

        jScrollPane1.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Runs"));

        runsPanel.setLayout(new javax.swing.BoxLayout(runsPanel, javax.swing.BoxLayout.Y_AXIS));
        JScrollPane scroll = new JScrollPane(runsPanel);
        jScrollPane1.setViewportView(runsPanel);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 829, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(20, 20, 20)
                        .add(addRunButton))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(description, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(31, 31, 31)
                .add(description)
                .add(35, 35, 35)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(addRunButton)
                .add(13, 13, 13))
        );
    }// </editor-fold>//GEN-END:initComponents
    /**
     *
     * @param evt
     */
    private void addRunButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRunButtonActionPerformed
        this.addRun();
}//GEN-LAST:event_addRunButtonActionPerformed

    /**
     *
     */
    public void addRun(){
        RunElementPanel run = null;
        if (this.defXML instanceof ConfigXMLFile){
            ConfigXMLFile config = (ConfigXMLFile) this.defXML;
            run = new RunElementPanel(this.runIndex++, this, config, config.getSimXMLFile());
        }
        else{
            run = new RunElementPanel(this.runIndex++, this, this.defXML, this.simXML);
        }

        this.runsPanel.add(run);
        this.reset();
    }

    /**
     *
     * @param run
     */
    public void removeRun(RunElementPanel run){
        this.runsPanel.remove(run);
        this.reset();
    }

    /**
     *
     */
    public void reset(){
        this.parent.repaint();
    }

    /**
     * 
     * @return
     */
    public Vector<RunElement> getRunElements(){
        Vector<RunElement> runs = new Vector<RunElement>();
        if (this.runsPanel.getComponentCount() < 1){
            runs.add(new RunElement());
            return runs;
        }
        else{
            for (int i = 0; i < this.runsPanel.getComponentCount(); i++){
                RunElementPanel runi = (RunElementPanel)this.runsPanel.getComponent(i);
                runs.add(runi.getRunElement());
            }
            return runs;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRunButton;
    private javax.swing.JLabel description;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel runsPanel;
    // End of variables declaration//GEN-END:variables

    /**
     * 
     */
    public void initTab() {
        if (this.defXML instanceof ConfigXMLFile){
            ConfigXMLFile confXML = (ConfigXMLFile) this.defXML;
            for (int i = 0; i < confXML.getRunElements().size(); i++){
                RunElement re = new RunElement(confXML.getRunElements().get(i));
                RunElementPanel run = new RunElementPanel(i, this, re, confXML);
                this.runsPanel.add(run);
            }
            this.reset();
        }
    }

}
