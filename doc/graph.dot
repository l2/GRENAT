/* Created by mdot for Matlab */
digraph m2html {
  GRENAT -> CheckGE;
  GRENAT -> GRENAT;
  GRENAT -> affectTxtProp;
  GRENAT -> checkInterp;
  GRENAT -> checkRef;
  GRENAT -> checkUpdate;
  GRENAT -> conf;
  GRENAT -> defineDisp;
  GRENAT -> defineRef;
  GRENAT -> errCalc;
  GRENAT -> eval;
  GRENAT -> evalCI;
  GRENAT -> evalInfill;
  GRENAT -> initGRENAT;
  GRENAT -> initGradAvail;
  GRENAT -> initRunEval;
  GRENAT -> initRunTrain;
  GRENAT -> orderData;
  GRENAT -> selfUpdate;
  GRENAT -> setTypeConf;
  GRENAT -> show;
  GRENAT -> show1D;
  GRENAT -> show2D;
  GRENAT -> showCI;
  GRENAT -> showData;
  GRENAT -> showEI;
  GRENAT -> showGrad;
  GRENAT -> showGradRef;
  GRENAT -> showResp;
  GRENAT -> showRespRef;
  GRENAT -> showVar;
  GRENAT -> train;
  GRENAT -> update;
  GRENAT -> updateGrad;
  GRENAT -> updateNonSampleGrad;
  GRENAT -> updateNonSamplePts;
  GRENAT -> updateNonSampleResp;
  GRENAT -> updateNonSampleVar;
  GRENAT -> updateResp;
  GRENAT -> updateSampling;
  GRENAT -> updateSig2;
  GRENAT -> initDirGRENAT;
  GRENAT -> eval;
  GRENAT -> train;
  GRENAT -> update;
  GRENAT -> eval;
  GRENAT -> train;
  GRENAT -> update;
  GRENAT -> eval;
  GRENAT -> train;
  GRENAT -> update;
  GRENAT -> eval;
  GRENAT -> train;
  GRENAT -> update;
  GRENAT -> show;
  checkInterp -> checkInterpRG;
  checkRef -> Gfprintf;
  checkUpdate -> Gfprintf;
  conf -> Gfprintf;
  conf -> dispTableTwoColumnsStruct;
  errCalc -> critErrDisp;
  eval -> train;
  eval -> train;
  eval -> train;
  eval -> train;
  eval -> train;
  eval -> Gfprintf;
  eval -> mesuTime;
  evalCI -> BuildCI;
  evalInfill -> InfillCrit;
  initGRENAT -> dispDate;
  initGRENAT -> initDisp;
  initGRENAT -> initMeta;
  initGRENAT -> MissData;
  initGRENAT -> NormRenorm;
  initGRENAT -> Gfprintf;
  selfUpdate -> Gfprintf;
  setTypeConf -> eval;
  setTypeConf -> eval;
  setTypeConf -> eval;
  setTypeConf -> eval;
  setTypeConf -> eval;
  show -> show1D;
  show -> show2D;
  show1D -> checkRef;
  show1D -> showCI;
  show1D -> showEI;
  show1D -> showGrad;
  show1D -> showGradRef;
  show1D -> showResp;
  show1D -> showRespRef;
  show1D -> showVar;
  show2D -> checkRef;
  show2D -> showCI;
  show2D -> showEI;
  show2D -> showGrad;
  show2D -> showGradRef;
  show2D -> showResp;
  show2D -> showRespRef;
  show2D -> showVar;
  showCI -> evalCI;
  showCI -> displaySurrogateCI;
  showData -> Gfprintf;
  showEI -> displaySurrogate;
  showGrad -> displaySurrogate;
  showGradRef -> displaySurrogate;
  showResp -> displaySurrogate;
  showRespRef -> displaySurrogate;
  showVar -> displaySurrogate;
  train -> PrepIn;
  update -> initRunEval;
  update -> initRunTrain;
  updateGrad -> initGradAvail;
  updateGrad -> initRunTrain;
  updateGrad -> Gfprintf;
  updateNonSamplePts -> initRunEval;
  updateResp -> initRunTrain;
  updateResp -> Gfprintf;
  updateSampling -> initRunTrain;
  updateSampling -> Gfprintf;
  ExampleUse1D -> GRENAT;
  ExampleUse1D -> initDirGRENAT;
  ExampleUse1D -> execParallel;
  ExampleUse1D -> mesuTime;
  ExampleUse2D -> GRENAT;
  ExampleUse2D -> initDirGRENAT;
  ExampleUse2D -> mesuTime;
  ExampleUseDOE -> GRENAT;
  ExampleUseDOE -> initDirGRENAT;
  ExampleUseDOE -> initNbPts;
  ExampleUseDOE -> buildDisp;
  ExampleUseDOE -> evalFunGrad;
  ExampleUseDOE -> mesuTime;
  LICENSE -> show;
  LICENSE -> LICENSE;
  LICENSE -> show;
  README -> GRENAT;
  README -> update;
  README -> init;
  README -> KRG;
  README -> update;
  README -> RBF;
  README -> update;
  README -> SVR;
  README -> update;
  README -> update;
  README -> init;
  README -> start;
  initDirGRENAT -> Gfprintf;
  BuildCI -> Gfprintf;
  InfillCrit -> Gfprintf;
  critErrDisp -> calcMSE;
  critErrDisp -> calcNMAE;
  critErrDisp -> calcNMSE;
  critErrDisp -> calcRAAE;
  critErrDisp -> calcRMAE;
  critErrDisp -> calcRMSE;
  critErrDisp -> corrFact;
  critErrDisp -> qualError;
  critErrDisp -> Gfprintf;
  critErrDisp -> dispTableTwoColumns;
  critErrDisp -> mesuTime;
  dispDate -> Gfprintf;
  displaySurrogate -> saveDisp;
  saveDisp -> Gfprintf;
  initDisp -> affectTxtProp;
  initDisp -> conf;
  initDisp -> initDisp;
  initDisp -> Gfprintf;
  initDisp -> dispTableTwoColumnsStruct;
  initMeta -> affectTxtProp;
  initMeta -> checkInterp;
  initMeta -> conf;
  initMeta -> initMeta;
  initMeta -> cv;
  initMeta -> cv;
  initMeta -> cv;
  initMeta -> Gfprintf;
  initMeta -> dispTableTwoColumns;
  initMeta -> dispTableTwoColumnsStruct;
  initNbPts -> Gfprintf;
  KernMatrix -> KernMatrix;
  KernMatrix -> addSample;
  KernMatrix -> buildMatrix;
  KernMatrix -> buildVector;
  KernMatrix -> checkMatrix;
  KernMatrix -> computeDist;
  KernMatrix -> computeIX;
  KernMatrix -> computeNbPara;
  KernMatrix -> computeNewDist;
  KernMatrix -> computeNewIX;
  KernMatrix -> fGrad;
  KernMatrix -> fIX;
  KernMatrix -> fRun;
  KernMatrix -> getKK;
  KernMatrix -> getKKd;
  KernMatrix -> getKKdd;
  KernMatrix -> init;
  KernMatrix -> loadKern;
  KernMatrix -> showKernel;
  KernMatrix -> updateMatrix;
  KernMatrix -> addSample;
  KernMatrix -> buildMatrix;
  KernMatrix -> addSample;
  KernMatrix -> buildMatrix;
  KernMatrix -> addSample;
  KernMatrix -> buildMatrix;
  KernMatrix -> addSample;
  KernMatrix -> init;
  addSample -> Gfprintf;
  buildMatrix -> multiKernel;
  buildVector -> multiKernel;
  showKernel -> Gfprintf;
  showKernel -> dispTableTwoColumns;
  updateMatrix -> multiKernel;
  multiKernel -> multiTimes;
  multiKernel -> multitransp;
  toolCheckKernelFct -> multiKernel;
  toolGeneMonomial -> mono_upto_next_grlex;
  ConsoleProgressBar -> ConsoleProgressBar;
  mono_between_enum_test -> mono_between_enum;
  mono_between_next_grevlex -> mono_next_grevlex;
  mono_between_next_grevlex_test -> mono_between_next_grevlex;
  mono_between_next_grlex -> mono_next_grlex;
  mono_between_next_grlex_test -> mono_between_next_grlex;
  mono_between_random -> i4_uniform_ab;
  mono_between_random -> mono_unrank_grlex;
  mono_between_random -> mono_upto_enum;
  mono_between_random_test -> mono_between_random;
  mono_next_grevlex_test -> mono_next_grevlex;
  mono_next_grlex_test -> mono_next_grlex;
  mono_print_test -> mono_print;
  mono_rank_grlex -> i4_choose;
  mono_rank_grlex_test -> mono_rank_grlex;
  mono_rank_grlex_test -> mono_upto_next_grlex;
  mono_total_enum_test -> mono_total_enum;
  mono_total_next_grevlex -> mono_next_grevlex;
  mono_total_next_grevlex_test -> mono_total_next_grevlex;
  mono_total_next_grlex -> mono_next_grlex;
  mono_total_next_grlex_test -> mono_total_next_grlex;
  mono_total_random -> i4_uniform_ab;
  mono_total_random -> mono_unrank_grlex;
  mono_total_random -> mono_upto_enum;
  mono_total_random_test -> mono_total_random;
  mono_unrank_grlex -> i4_choose;
  mono_unrank_grlex_test -> i4_uniform_ab;
  mono_unrank_grlex_test -> mono_unrank_grlex;
  mono_unrank_grlex_test -> mono_upto_enum;
  mono_unrank_grlex_test -> mono_upto_next_grlex;
  mono_upto_enum_test -> mono_upto_enum;
  mono_upto_next_grevlex -> mono_next_grevlex;
  mono_upto_next_grevlex_test -> mono_upto_next_grevlex;
  mono_upto_next_grlex -> mono_next_grlex;
  mono_upto_next_grlex_test -> mono_upto_next_grlex;
  mono_upto_random -> i4_uniform_ab;
  mono_upto_random -> mono_unrank_grlex;
  mono_upto_random -> mono_upto_enum;
  mono_upto_random_test -> mono_upto_random;
  mono_value_test -> mono_print;
  mono_value_test -> mono_upto_random;
  mono_value_test -> mono_value;
  monomial_test -> mono_between_enum_test;
  monomial_test -> mono_between_next_grevlex_test;
  monomial_test -> mono_between_next_grlex_test;
  monomial_test -> mono_between_random_test;
  monomial_test -> mono_next_grevlex_test;
  monomial_test -> mono_next_grlex_test;
  monomial_test -> mono_print_test;
  monomial_test -> mono_rank_grlex_test;
  monomial_test -> mono_total_enum_test;
  monomial_test -> mono_total_next_grevlex_test;
  monomial_test -> mono_total_next_grlex_test;
  monomial_test -> mono_total_random_test;
  monomial_test -> mono_unrank_grlex_test;
  monomial_test -> mono_upto_enum_test;
  monomial_test -> mono_upto_next_grevlex_test;
  monomial_test -> mono_upto_next_grlex_test;
  monomial_test -> mono_upto_random_test;
  monomial_test -> mono_value_test;
  monomial_test -> timestamp;
  KRG -> eval;
  KRG -> train;
  KRG -> update;
  KRG -> addSample;
  KRG -> buildMatrix;
  KRG -> KRG;
  KRG -> addGrad;
  KRG -> addResp;
  KRG -> addSample;
  KRG -> buildMatrix;
  KRG -> checkMiss;
  KRG -> checkNewMiss;
  KRG -> compute;
  KRG -> computeVariance;
  KRG -> coreClassical;
  KRG -> coreLL;
  KRG -> coreLU;
  KRG -> coreQR;
  KRG -> cv;
  KRG -> estimPara;
  KRG -> eval;
  KRG -> fCompute;
  KRG -> getParaVal;
  KRG -> likelihood;
  KRG -> manageOpt;
  KRG -> setData;
  KRG -> showCV;
  KRG -> showInfo;
  KRG -> train;
  KRG -> trainUpdate;
  KRG -> update;
  KRG -> updateData;
  KRG -> addGrad;
  KRG -> addResp;
  KRG -> addSample;
  KRG -> buildMatrix;
  KRG -> checkMiss;
  KRG -> checkNewMiss;
  KRG -> compute;
  KRG -> computeVariance;
  KRG -> coreClassical;
  KRG -> coreLL;
  KRG -> coreLU;
  KRG -> coreQR;
  KRG -> cv;
  KRG -> estimPara;
  KRG -> eval;
  KRG -> fCompute;
  KRG -> getParaVal;
  KRG -> manageOpt;
  KRG -> setData;
  KRG -> showCV;
  KRG -> showInfo;
  KRG -> train;
  KRG -> trainUpdate;
  KRG -> update;
  KRG -> updateData;
  KRG -> addGrad;
  KRG -> addResp;
  KRG -> addSample;
  KRG -> buildMatrix;
  KRG -> checkMiss;
  KRG -> checkNewMiss;
  KRG -> compute;
  KRG -> computeVariance;
  KRG -> coreClassical;
  KRG -> cv;
  KRG -> estimPara;
  KRG -> eval;
  KRG -> fCompute;
  KRG -> getParaVal;
  KRG -> manageOpt;
  KRG -> setData;
  KRG -> showCV;
  KRG -> showInfo;
  KRG -> train;
  KRG -> trainUpdate;
  KRG -> update;
  KRG -> updateData;
  KRG -> addGrad;
  KRG -> addResp;
  KRG -> addSample;
  KRG -> checkMiss;
  KRG -> checkNewMiss;
  KRG -> compute;
  KRG -> eval;
  KRG -> manageOpt;
  KRG -> setData;
  KRG -> showInfo;
  KRG -> train;
  KRG -> trainUpdate;
  KRG -> update;
  KRG -> updateData;
  KRG -> addGrad;
  KRG -> addResp;
  KRG -> addGrad;
  KRG -> addResp;
  KRG -> Gfprintf;
  compute -> definePara;
  cv -> cv;
  cv -> cv;
  cv -> cv;
  cv -> Gfprintf;
  cv -> dispTableTwoColumns;
  cv -> mesuTime;
  estimPara -> EstimPara;
  getParaVal -> definePara;
  loadDefaultConf -> initMeta;
  setData -> KernMatrix;
  setData -> xLS;
  showCV -> QQplot;
  showCV -> SCVRplot;
  showInfo -> Gfprintf;
  showInfo -> dispTxtOnOff;
  update -> Gfprintf;
  RBF -> eval;
  RBF -> train;
  RBF -> update;
  RBF -> addSample;
  RBF -> buildMatrix;
  RBF -> addGrad;
  RBF -> addResp;
  RBF -> addSample;
  RBF -> buildMatrix;
  RBF -> checkMiss;
  RBF -> checkNewMiss;
  RBF -> compute;
  RBF -> computeVariance;
  RBF -> coreClassical;
  RBF -> coreLL;
  RBF -> coreLU;
  RBF -> coreQR;
  RBF -> cv;
  RBF -> estimPara;
  RBF -> eval;
  RBF -> fCompute;
  RBF -> getParaVal;
  RBF -> loadDefaultConf;
  RBF -> manageOpt;
  RBF -> setData;
  RBF -> showCV;
  RBF -> showInfo;
  RBF -> train;
  RBF -> trainUpdate;
  RBF -> update;
  RBF -> updateData;
  RBF -> RBF;
  RBF -> addGrad;
  RBF -> addResp;
  RBF -> addSample;
  RBF -> buildMatrix;
  RBF -> checkMiss;
  RBF -> checkNewMiss;
  RBF -> compute;
  RBF -> computeVariance;
  RBF -> coreClassical;
  RBF -> coreLL;
  RBF -> coreLU;
  RBF -> coreQR;
  RBF -> cv;
  RBF -> estimPara;
  RBF -> eval;
  RBF -> fCompute;
  RBF -> getParaVal;
  RBF -> loadDefaultConf;
  RBF -> manageOpt;
  RBF -> setData;
  RBF -> showCV;
  RBF -> showInfo;
  RBF -> train;
  RBF -> trainUpdate;
  RBF -> update;
  RBF -> updateData;
  RBF -> addGrad;
  RBF -> addResp;
  RBF -> addSample;
  RBF -> buildMatrix;
  RBF -> checkMiss;
  RBF -> checkNewMiss;
  RBF -> compute;
  RBF -> computeVariance;
  RBF -> coreClassical;
  RBF -> cv;
  RBF -> estimPara;
  RBF -> eval;
  RBF -> fCompute;
  RBF -> getParaVal;
  RBF -> loadDefaultConf;
  RBF -> manageOpt;
  RBF -> setData;
  RBF -> showCV;
  RBF -> showInfo;
  RBF -> train;
  RBF -> trainUpdate;
  RBF -> update;
  RBF -> updateData;
  RBF -> addGrad;
  RBF -> addResp;
  RBF -> addSample;
  RBF -> checkMiss;
  RBF -> checkNewMiss;
  RBF -> compute;
  RBF -> eval;
  RBF -> manageOpt;
  RBF -> setData;
  RBF -> showInfo;
  RBF -> train;
  RBF -> trainUpdate;
  RBF -> update;
  RBF -> updateData;
  RBF -> addGrad;
  RBF -> addResp;
  RBF -> addGrad;
  RBF -> addResp;
  cv -> cv;
  cv -> cv;
  cv -> cv;
  cv -> Gfprintf;
  cv -> dispTableTwoColumns;
  cv -> mesuTime;
  estimPara -> EstimPara;
  getParaVal -> definePara;
  loadDefaultConf -> initMeta;
  setData -> KernMatrix;
  showCV -> QQplot;
  showCV -> SCVRplot;
  showInfo -> Gfprintf;
  showInfo -> dispTxtOnOff;
  update -> Gfprintf;
  SVR -> eval;
  SVR -> train;
  SVR -> update;
  SVR -> addSample;
  SVR -> buildMatrix;
  SVR -> addGrad;
  SVR -> addResp;
  SVR -> addSample;
  SVR -> buildMatrix;
  SVR -> checkMiss;
  SVR -> checkNewMiss;
  SVR -> compute;
  SVR -> computeVariance;
  SVR -> coreClassical;
  SVR -> cv;
  SVR -> estimPara;
  SVR -> eval;
  SVR -> fCompute;
  SVR -> getParaVal;
  SVR -> manageOpt;
  SVR -> setData;
  SVR -> showCV;
  SVR -> showInfo;
  SVR -> train;
  SVR -> trainUpdate;
  SVR -> update;
  SVR -> updateData;
  SVR -> addGrad;
  SVR -> addResp;
  SVR -> addSample;
  SVR -> buildMatrix;
  SVR -> checkMiss;
  SVR -> checkNewMiss;
  SVR -> compute;
  SVR -> computeVariance;
  SVR -> coreClassical;
  SVR -> cv;
  SVR -> estimPara;
  SVR -> eval;
  SVR -> fCompute;
  SVR -> getParaVal;
  SVR -> manageOpt;
  SVR -> setData;
  SVR -> showCV;
  SVR -> showInfo;
  SVR -> train;
  SVR -> trainUpdate;
  SVR -> update;
  SVR -> updateData;
  SVR -> SVR;
  SVR -> addGrad;
  SVR -> addResp;
  SVR -> addSample;
  SVR -> buildMatrix;
  SVR -> checkMiss;
  SVR -> checkNewMiss;
  SVR -> compute;
  SVR -> computeVariance;
  SVR -> coreClassical;
  SVR -> cv;
  SVR -> estimPara;
  SVR -> eval;
  SVR -> fCompute;
  SVR -> getParaVal;
  SVR -> manageOpt;
  SVR -> sb;
  SVR -> setData;
  SVR -> showCV;
  SVR -> showInfo;
  SVR -> train;
  SVR -> trainUpdate;
  SVR -> update;
  SVR -> updateData;
  SVR -> addGrad;
  SVR -> addResp;
  SVR -> addSample;
  SVR -> checkMiss;
  SVR -> checkNewMiss;
  SVR -> compute;
  SVR -> eval;
  SVR -> manageOpt;
  SVR -> setData;
  SVR -> showInfo;
  SVR -> train;
  SVR -> trainUpdate;
  SVR -> update;
  SVR -> updateData;
  SVR -> addGrad;
  SVR -> addResp;
  SVR -> addGrad;
  SVR -> addResp;
  coreClassical -> ExecQP;
  cv -> LOOCalcError;
  cv -> cv;
  cv -> cv;
  cv -> SVR;
  cv -> cv;
  cv -> Gfprintf;
  cv -> dispTableTwoColumns;
  cv -> mesuTime;
  estimPara -> EstimPara;
  getParaVal -> definePara;
  loadDefaultConf -> initMeta;
  sb -> mesuTime;
  setData -> KernMatrix;
  showCV -> QQplot;
  showCV -> SCVRplot;
  showInfo -> Gfprintf;
  showInfo -> dispTxtOnOff;
  update -> Gfprintf;
  buildFunPoly -> toolGeneMonomial;
  buildMatrixNonS -> multiMono;
  compute -> Gfprintf;
  showInfo -> Gfprintf;
  train -> multiMono;
  update -> Gfprintf;
  xLS -> eval;
  xLS -> train;
  xLS -> update;
  xLS -> addSample;
  xLS -> addGrad;
  xLS -> addResp;
  xLS -> addSample;
  xLS -> checkMiss;
  xLS -> checkNewMiss;
  xLS -> compute;
  xLS -> eval;
  xLS -> manageOpt;
  xLS -> setData;
  xLS -> showInfo;
  xLS -> train;
  xLS -> trainUpdate;
  xLS -> update;
  xLS -> updateData;
  xLS -> addGrad;
  xLS -> addResp;
  xLS -> addSample;
  xLS -> checkMiss;
  xLS -> checkNewMiss;
  xLS -> compute;
  xLS -> eval;
  xLS -> manageOpt;
  xLS -> setData;
  xLS -> showInfo;
  xLS -> train;
  xLS -> trainUpdate;
  xLS -> update;
  xLS -> updateData;
  xLS -> addGrad;
  xLS -> addResp;
  xLS -> addSample;
  xLS -> checkMiss;
  xLS -> checkNewMiss;
  xLS -> compute;
  xLS -> eval;
  xLS -> manageOpt;
  xLS -> setData;
  xLS -> showInfo;
  xLS -> train;
  xLS -> trainUpdate;
  xLS -> update;
  xLS -> updateData;
  xLS -> addGrad;
  xLS -> addResp;
  xLS -> addSample;
  xLS -> buildFunPoly;
  xLS -> buildMatrixNonS;
  xLS -> checkMiss;
  xLS -> checkNewMiss;
  xLS -> compute;
  xLS -> eval;
  xLS -> manageOpt;
  xLS -> setData;
  xLS -> showInfo;
  xLS -> train;
  xLS -> trainUpdate;
  xLS -> update;
  xLS -> updateData;
  xLS -> xLS;
  xLS -> addGrad;
  xLS -> addResp;
  xLS -> addGrad;
  xLS -> addResp;
  xLS -> Gfprintf;
  EstimPara -> definePara;
  EstimPara -> stopEstim;
  EstimPara -> loadConf;
  EstimPara -> Gfprintf;
  EstimPara -> isOctave;
  EstimPara -> mesuTime;
  EstimPara -> textProgressbar;
  PrepIn -> Gfprintf;
  definePara -> Gfprintf;
  stopEstim -> stop;
  testXLS -> initMeta;
  testXLS -> RBF;
  testXLS -> MissData;
  MissData -> show;
  MissData -> addGrad;
  MissData -> addResp;
  MissData -> addGrad;
  MissData -> addResp;
  MissData -> addGrad;
  MissData -> addResp;
  MissData -> addGrad;
  MissData -> addResp;
  MissData -> MissData;
  MissData -> addData;
  MissData -> addGrad;
  MissData -> addResp;
  MissData -> addSampling;
  MissData -> check;
  MissData -> checkGrad;
  MissData -> checkResp;
  MissData -> removeGM;
  MissData -> removeGRM;
  MissData -> removeGRV;
  MissData -> removeGV;
  MissData -> removeRM;
  MissData -> removeRV;
  MissData -> show;
  MissData -> addGrad;
  MissData -> addResp;
  MissData -> addSampling;
  check -> Gfprintf;
  removeGM -> Gfprintf;
  removeGRM -> Gfprintf;
  removeGRV -> Gfprintf;
  removeGV -> Gfprintf;
  removeRM -> Gfprintf;
  removeRV -> Gfprintf;
  show -> Gfprintf;
  NormG -> Gfprintf;
  NormRenorm -> init;
  NormRenorm -> addGrad;
  NormRenorm -> addResp;
  NormRenorm -> addGrad;
  NormRenorm -> addResp;
  NormRenorm -> addGrad;
  NormRenorm -> addResp;
  NormRenorm -> addGrad;
  NormRenorm -> addResp;
  NormRenorm -> addGrad;
  NormRenorm -> addResp;
  NormRenorm -> addSampling;
  NormRenorm -> Norm;
  NormRenorm -> NormG;
  NormRenorm -> NormRenorm;
  NormRenorm -> addGrad;
  NormRenorm -> addResp;
  NormRenorm -> addSampling;
  NormRenorm -> choiceData;
  NormRenorm -> computeNorm;
  NormRenorm -> init;
  NormRenorm -> loadConf;
  NormRenorm -> reNorm;
  NormRenorm -> reNormDiff;
  NormRenorm -> reNormG;
  NormRenorm -> reNormVar;
  choiceData -> Gfprintf;
  computeNorm -> Gfprintf;
  loadConf -> checkStCl;
  reNormG -> Gfprintf;
  reNormVar -> Gfprintf;
  checkRun -> Gfprintf;
  checkRun -> isOctave;
  execParallel -> checkLoadDef;
  execParallel -> checkRun;
  execParallel -> currentConf;
  execParallel -> defNumWorkers;
  execParallel -> defaultConf;
  execParallel -> execParallel;
  execParallel -> getDefNumWorkers;
  execParallel -> start;
  execParallel -> stop;
  execParallel -> Gfprintf;
  start -> stop;
  start -> Gfprintf;
  stop -> currentConf;
  stop -> Gfprintf;
  ExecQP -> isOctave;
  buildDisp -> Gfprintf;
  buildDisp -> mesuTime;
  buildDocGRENAT -> initDirGRENAT;
  buildDocGRENAT -> listFilesToolboxGRENAT;
  checkInterpRG -> Gfprintf;
  dispTableTwoColumns -> Gfprintf;
  dispTxtOnOff -> Gfprintf;
  evalFunGrad -> eval;
  evalFunGrad -> eval;
  evalFunGrad -> eval;
  evalFunGrad -> eval;
  evalFunGrad -> eval;
  evalFunGrad -> Gfprintf;
  evalFunGrad -> mesuTime;
  mesuTime -> show;
  mesuTime -> show;
  mesuTime -> Gfprintf;
  mesuTime -> mesuTime;
  modWarning -> modWarning;
  textProgressbar -> Gfprintf;

  CheckGE [URL="GRENAT/@GRENAT/CheckGE.html"];
  GRENAT [URL="GRENAT/@GRENAT/GRENAT.html"];
  affectTxtProp [URL="GRENAT/@GRENAT/affectTxtProp.html"];
  checkInterp [URL="GRENAT/@GRENAT/checkInterp.html"];
  checkRef [URL="GRENAT/@GRENAT/checkRef.html"];
  checkUpdate [URL="GRENAT/@GRENAT/checkUpdate.html"];
  conf [URL="GRENAT/@GRENAT/conf.html"];
  defineDisp [URL="GRENAT/@GRENAT/defineDisp.html"];
  defineRef [URL="GRENAT/@GRENAT/defineRef.html"];
  errCalc [URL="GRENAT/@GRENAT/errCalc.html"];
  eval [URL="GRENAT/@GRENAT/eval.html"];
  evalCI [URL="GRENAT/@GRENAT/evalCI.html"];
  evalInfill [URL="GRENAT/@GRENAT/evalInfill.html"];
  initGRENAT [URL="GRENAT/@GRENAT/initGRENAT.html"];
  initGradAvail [URL="GRENAT/@GRENAT/initGradAvail.html"];
  initRunEval [URL="GRENAT/@GRENAT/initRunEval.html"];
  initRunTrain [URL="GRENAT/@GRENAT/initRunTrain.html"];
  orderData [URL="GRENAT/@GRENAT/orderData.html"];
  selfUpdate [URL="GRENAT/@GRENAT/selfUpdate.html"];
  setTypeConf [URL="GRENAT/@GRENAT/setTypeConf.html"];
  show [URL="GRENAT/@GRENAT/show.html"];
  show1D [URL="GRENAT/@GRENAT/show1D.html"];
  show2D [URL="GRENAT/@GRENAT/show2D.html"];
  showCI [URL="GRENAT/@GRENAT/showCI.html"];
  showData [URL="GRENAT/@GRENAT/showData.html"];
  showEI [URL="GRENAT/@GRENAT/showEI.html"];
  showGrad [URL="GRENAT/@GRENAT/showGrad.html"];
  showGradRef [URL="GRENAT/@GRENAT/showGradRef.html"];
  showResp [URL="GRENAT/@GRENAT/showResp.html"];
  showRespRef [URL="GRENAT/@GRENAT/showRespRef.html"];
  showVar [URL="GRENAT/@GRENAT/showVar.html"];
  train [URL="GRENAT/@GRENAT/train.html"];
  update [URL="GRENAT/@GRENAT/update.html"];
  updateGrad [URL="GRENAT/@GRENAT/updateGrad.html"];
  updateNonSampleGrad [URL="GRENAT/@GRENAT/updateNonSampleGrad.html"];
  updateNonSamplePts [URL="GRENAT/@GRENAT/updateNonSamplePts.html"];
  updateNonSampleResp [URL="GRENAT/@GRENAT/updateNonSampleResp.html"];
  updateNonSampleVar [URL="GRENAT/@GRENAT/updateNonSampleVar.html"];
  updateResp [URL="GRENAT/@GRENAT/updateResp.html"];
  updateSampling [URL="GRENAT/@GRENAT/updateSampling.html"];
  updateSig2 [URL="GRENAT/@GRENAT/updateSig2.html"];
  ExampleUse1D [URL="GRENAT/ExampleUse1D.html"];
  ExampleUse2D [URL="GRENAT/ExampleUse2D.html"];
  ExampleUseDOE [URL="GRENAT/ExampleUseDOE.html"];
  LICENSE [URL="GRENAT/LICENSE.html"];
  README [URL="GRENAT/README.html"];
  initDirGRENAT [URL="GRENAT/initDirGRENAT.html"];
  BuildCI [URL="GRENAT/src/crit/BuildCI.html"];
  InfillCrit [URL="GRENAT/src/crit/InfillCrit.html"];
  LOOCalcError [URL="GRENAT/src/crit/LOOCalcError.html"];
  calcMSE [URL="GRENAT/src/crit/calcMSE.html"];
  calcNMAE [URL="GRENAT/src/crit/calcNMAE.html"];
  calcNMSE [URL="GRENAT/src/crit/calcNMSE.html"];
  calcRAAE [URL="GRENAT/src/crit/calcRAAE.html"];
  calcRMAE [URL="GRENAT/src/crit/calcRMAE.html"];
  calcRMSE [URL="GRENAT/src/crit/calcRMSE.html"];
  corrFact [URL="GRENAT/src/crit/corrFact.html"];
  critErrDisp [URL="GRENAT/src/crit/critErrDisp.html"];
  qualError [URL="GRENAT/src/crit/qualError.html"];
  QQplot [URL="GRENAT/src/disp/QQplot.html"];
  SCVRplot [URL="GRENAT/src/disp/SCVRplot.html"];
  dispDate [URL="GRENAT/src/disp/dispDate.html"];
  displaySurrogate [URL="GRENAT/src/disp/displaySurrogate.html"];
  displaySurrogateCI [URL="GRENAT/src/disp/displaySurrogateCI.html"];
  saveDisp [URL="GRENAT/src/disp/saveDisp.html"];
  initDisp [URL="GRENAT/src/init/initDisp.html"];
  initMeta [URL="GRENAT/src/init/initMeta.html"];
  initNbPts [URL="GRENAT/src/init/initNbPts.html"];
  KernMatrix [URL="GRENAT/src/kernANDfun/@KernMatrix/KernMatrix.html"];
  addSample [URL="GRENAT/src/kernANDfun/@KernMatrix/addSample.html"];
  buildMatrix [URL="GRENAT/src/kernANDfun/@KernMatrix/buildMatrix.html"];
  buildVector [URL="GRENAT/src/kernANDfun/@KernMatrix/buildVector.html"];
  checkMatrix [URL="GRENAT/src/kernANDfun/@KernMatrix/checkMatrix.html"];
  computeDist [URL="GRENAT/src/kernANDfun/@KernMatrix/computeDist.html"];
  computeIX [URL="GRENAT/src/kernANDfun/@KernMatrix/computeIX.html"];
  computeNbPara [URL="GRENAT/src/kernANDfun/@KernMatrix/computeNbPara.html"];
  computeNewDist [URL="GRENAT/src/kernANDfun/@KernMatrix/computeNewDist.html"];
  computeNewIX [URL="GRENAT/src/kernANDfun/@KernMatrix/computeNewIX.html"];
  fGrad [URL="GRENAT/src/kernANDfun/@KernMatrix/fGrad.html"];
  fIX [URL="GRENAT/src/kernANDfun/@KernMatrix/fIX.html"];
  fRun [URL="GRENAT/src/kernANDfun/@KernMatrix/fRun.html"];
  getKK [URL="GRENAT/src/kernANDfun/@KernMatrix/getKK.html"];
  getKKd [URL="GRENAT/src/kernANDfun/@KernMatrix/getKKd.html"];
  getKKdd [URL="GRENAT/src/kernANDfun/@KernMatrix/getKKdd.html"];
  init [URL="GRENAT/src/kernANDfun/@KernMatrix/init.html"];
  loadKern [URL="GRENAT/src/kernANDfun/@KernMatrix/loadKern.html"];
  showKernel [URL="GRENAT/src/kernANDfun/@KernMatrix/showKernel.html"];
  updateMatrix [URL="GRENAT/src/kernANDfun/@KernMatrix/updateMatrix.html"];
  Wendland10 [URL="GRENAT/src/kernANDfun/Wendland10.html"];
  Wendland20 [URL="GRENAT/src/kernANDfun/Wendland20.html"];
  Wendland21 [URL="GRENAT/src/kernANDfun/Wendland21.html"];
  Wendland30 [URL="GRENAT/src/kernANDfun/Wendland30.html"];
  Wendland31 [URL="GRENAT/src/kernANDfun/Wendland31.html"];
  Wendland32 [URL="GRENAT/src/kernANDfun/Wendland32.html"];
  Wendland41 [URL="GRENAT/src/kernANDfun/Wendland41.html"];
  Wendland42 [URL="GRENAT/src/kernANDfun/Wendland42.html"];
  Wendland52 [URL="GRENAT/src/kernANDfun/Wendland52.html"];
  Wendland53 [URL="GRENAT/src/kernANDfun/Wendland53.html"];
  cauchy [URL="GRENAT/src/kernANDfun/cauchy.html"];
  circular [URL="GRENAT/src/kernANDfun/circular.html"];
  constant [URL="GRENAT/src/kernANDfun/constant.html"];
  cubicspline0 [URL="GRENAT/src/kernANDfun/cubicspline0.html"];
  cubicspline1 [URL="GRENAT/src/kernANDfun/cubicspline1.html"];
  cubicspline2 [URL="GRENAT/src/kernANDfun/cubicspline2.html"];
  expg [URL="GRENAT/src/kernANDfun/expg.html"];
  expo [URL="GRENAT/src/kernANDfun/expo.html"];
  invmultiqua [URL="GRENAT/src/kernANDfun/invmultiqua.html"];
  linear [URL="GRENAT/src/kernANDfun/linear.html"];
  linearspline [URL="GRENAT/src/kernANDfun/linearspline.html"];
  logk [URL="GRENAT/src/kernANDfun/logk.html"];
  matern [URL="GRENAT/src/kernANDfun/matern.html"];
  matern32 [URL="GRENAT/src/kernANDfun/matern32.html"];
  matern52 [URL="GRENAT/src/kernANDfun/matern52.html"];
  multiKernel [URL="GRENAT/src/kernANDfun/multiKernel.html"];
  multiMono [URL="GRENAT/src/kernANDfun/multiMono.html"];
  multiqua [URL="GRENAT/src/kernANDfun/multiqua.html"];
  powerk [URL="GRENAT/src/kernANDfun/powerk.html"];
  quadraticspline [URL="GRENAT/src/kernANDfun/quadraticspline.html"];
  ratmultiqua [URL="GRENAT/src/kernANDfun/ratmultiqua.html"];
  sexp [URL="GRENAT/src/kernANDfun/sexp.html"];
  spherical [URL="GRENAT/src/kernANDfun/spherical.html"];
  thinplatespline [URL="GRENAT/src/kernANDfun/thinplatespline.html"];
  toolBenchmarkFct [URL="GRENAT/src/kernANDfun/toolBenchmarkFct.html"];
  toolCheckKernelFct [URL="GRENAT/src/kernANDfun/toolCheckKernelFct.html"];
  toolExportFct [URL="GRENAT/src/kernANDfun/toolExportFct.html"];
  toolGeneMonomial [URL="GRENAT/src/kernANDfun/toolGeneMonomial.html"];
  tstudent [URL="GRENAT/src/kernANDfun/tstudent.html"];
  wave [URL="GRENAT/src/kernANDfun/wave.html"];
  wavelet [URL="GRENAT/src/kernANDfun/wavelet.html"];
  wendland [URL="GRENAT/src/kernANDfun/wendland.html"];
  ConsoleProgressBar [URL="GRENAT/src/libs/ConsoleProgressBar.html"];
  i4_choose [URL="GRENAT/src/libs/Monomial/i4_choose.html"];
  i4_uniform_ab [URL="GRENAT/src/libs/Monomial/i4_uniform_ab.html"];
  i4vec_uniform_ab [URL="GRENAT/src/libs/Monomial/i4vec_uniform_ab.html"];
  mono_between_enum [URL="GRENAT/src/libs/Monomial/mono_between_enum.html"];
  mono_between_enum_test [URL="GRENAT/src/libs/Monomial/mono_between_enum_test.html"];
  mono_between_next_grevlex [URL="GRENAT/src/libs/Monomial/mono_between_next_grevlex.html"];
  mono_between_next_grevlex_test [URL="GRENAT/src/libs/Monomial/mono_between_next_grevlex_test.html"];
  mono_between_next_grlex [URL="GRENAT/src/libs/Monomial/mono_between_next_grlex.html"];
  mono_between_next_grlex_test [URL="GRENAT/src/libs/Monomial/mono_between_next_grlex_test.html"];
  mono_between_random [URL="GRENAT/src/libs/Monomial/mono_between_random.html"];
  mono_between_random_test [URL="GRENAT/src/libs/Monomial/mono_between_random_test.html"];
  mono_next_grevlex [URL="GRENAT/src/libs/Monomial/mono_next_grevlex.html"];
  mono_next_grevlex_test [URL="GRENAT/src/libs/Monomial/mono_next_grevlex_test.html"];
  mono_next_grlex [URL="GRENAT/src/libs/Monomial/mono_next_grlex.html"];
  mono_next_grlex_test [URL="GRENAT/src/libs/Monomial/mono_next_grlex_test.html"];
  mono_print [URL="GRENAT/src/libs/Monomial/mono_print.html"];
  mono_print_test [URL="GRENAT/src/libs/Monomial/mono_print_test.html"];
  mono_rank_grlex [URL="GRENAT/src/libs/Monomial/mono_rank_grlex.html"];
  mono_rank_grlex_test [URL="GRENAT/src/libs/Monomial/mono_rank_grlex_test.html"];
  mono_total_enum [URL="GRENAT/src/libs/Monomial/mono_total_enum.html"];
  mono_total_enum_test [URL="GRENAT/src/libs/Monomial/mono_total_enum_test.html"];
  mono_total_next_grevlex [URL="GRENAT/src/libs/Monomial/mono_total_next_grevlex.html"];
  mono_total_next_grevlex_test [URL="GRENAT/src/libs/Monomial/mono_total_next_grevlex_test.html"];
  mono_total_next_grlex [URL="GRENAT/src/libs/Monomial/mono_total_next_grlex.html"];
  mono_total_next_grlex_test [URL="GRENAT/src/libs/Monomial/mono_total_next_grlex_test.html"];
  mono_total_random [URL="GRENAT/src/libs/Monomial/mono_total_random.html"];
  mono_total_random_test [URL="GRENAT/src/libs/Monomial/mono_total_random_test.html"];
  mono_unrank_grlex [URL="GRENAT/src/libs/Monomial/mono_unrank_grlex.html"];
  mono_unrank_grlex_test [URL="GRENAT/src/libs/Monomial/mono_unrank_grlex_test.html"];
  mono_upto_enum [URL="GRENAT/src/libs/Monomial/mono_upto_enum.html"];
  mono_upto_enum_test [URL="GRENAT/src/libs/Monomial/mono_upto_enum_test.html"];
  mono_upto_next_grevlex [URL="GRENAT/src/libs/Monomial/mono_upto_next_grevlex.html"];
  mono_upto_next_grevlex_test [URL="GRENAT/src/libs/Monomial/mono_upto_next_grevlex_test.html"];
  mono_upto_next_grlex [URL="GRENAT/src/libs/Monomial/mono_upto_next_grlex.html"];
  mono_upto_next_grlex_test [URL="GRENAT/src/libs/Monomial/mono_upto_next_grlex_test.html"];
  mono_upto_random [URL="GRENAT/src/libs/Monomial/mono_upto_random.html"];
  mono_upto_random_test [URL="GRENAT/src/libs/Monomial/mono_upto_random_test.html"];
  mono_value [URL="GRENAT/src/libs/Monomial/mono_value.html"];
  mono_value_test [URL="GRENAT/src/libs/Monomial/mono_value_test.html"];
  monomial_test [URL="GRENAT/src/libs/Monomial/monomial_test.html"];
  timestamp [URL="GRENAT/src/libs/Monomial/timestamp.html"];
  mergestruct [URL="GRENAT/src/libs/mergestruct.html"];
  multiTimes [URL="GRENAT/src/libs/multiTimes.html"];
  multiprod [URL="GRENAT/src/libs/multiprod.html"];
  multitransp [URL="GRENAT/src/libs/multitransp.html"];
  KRG [URL="GRENAT/src/surrogate/@KRG/KRG.html"];
  addGrad [URL="GRENAT/src/surrogate/@KRG/addGrad.html"];
  addResp [URL="GRENAT/src/surrogate/@KRG/addResp.html"];
  addSample [URL="GRENAT/src/surrogate/@KRG/addSample.html"];
  buildMatrix [URL="GRENAT/src/surrogate/@KRG/buildMatrix.html"];
  checkMiss [URL="GRENAT/src/surrogate/@KRG/checkMiss.html"];
  checkNewMiss [URL="GRENAT/src/surrogate/@KRG/checkNewMiss.html"];
  compute [URL="GRENAT/src/surrogate/@KRG/compute.html"];
  computeVariance [URL="GRENAT/src/surrogate/@KRG/computeVariance.html"];
  coreClassical [URL="GRENAT/src/surrogate/@KRG/coreClassical.html"];
  coreLL [URL="GRENAT/src/surrogate/@KRG/coreLL.html"];
  coreLU [URL="GRENAT/src/surrogate/@KRG/coreLU.html"];
  coreQR [URL="GRENAT/src/surrogate/@KRG/coreQR.html"];
  cv [URL="GRENAT/src/surrogate/@KRG/cv.html"];
  estimPara [URL="GRENAT/src/surrogate/@KRG/estimPara.html"];
  eval [URL="GRENAT/src/surrogate/@KRG/eval.html"];
  fCompute [URL="GRENAT/src/surrogate/@KRG/fCompute.html"];
  getParaVal [URL="GRENAT/src/surrogate/@KRG/getParaVal.html"];
  likelihood [URL="GRENAT/src/surrogate/@KRG/likelihood.html"];
  loadDefaultConf [URL="GRENAT/src/surrogate/@KRG/loadDefaultConf.html"];
  manageOpt [URL="GRENAT/src/surrogate/@KRG/manageOpt.html"];
  setData [URL="GRENAT/src/surrogate/@KRG/setData.html"];
  showCV [URL="GRENAT/src/surrogate/@KRG/showCV.html"];
  showInfo [URL="GRENAT/src/surrogate/@KRG/showInfo.html"];
  train [URL="GRENAT/src/surrogate/@KRG/train.html"];
  trainUpdate [URL="GRENAT/src/surrogate/@KRG/trainUpdate.html"];
  update [URL="GRENAT/src/surrogate/@KRG/update.html"];
  updateData [URL="GRENAT/src/surrogate/@KRG/updateData.html"];
  RBF [URL="GRENAT/src/surrogate/@RBF/RBF.html"];
  addGrad [URL="GRENAT/src/surrogate/@RBF/addGrad.html"];
  addResp [URL="GRENAT/src/surrogate/@RBF/addResp.html"];
  addSample [URL="GRENAT/src/surrogate/@RBF/addSample.html"];
  buildMatrix [URL="GRENAT/src/surrogate/@RBF/buildMatrix.html"];
  checkMiss [URL="GRENAT/src/surrogate/@RBF/checkMiss.html"];
  checkNewMiss [URL="GRENAT/src/surrogate/@RBF/checkNewMiss.html"];
  compute [URL="GRENAT/src/surrogate/@RBF/compute.html"];
  computeVariance [URL="GRENAT/src/surrogate/@RBF/computeVariance.html"];
  coreClassical [URL="GRENAT/src/surrogate/@RBF/coreClassical.html"];
  coreLL [URL="GRENAT/src/surrogate/@RBF/coreLL.html"];
  coreLU [URL="GRENAT/src/surrogate/@RBF/coreLU.html"];
  coreQR [URL="GRENAT/src/surrogate/@RBF/coreQR.html"];
  cv [URL="GRENAT/src/surrogate/@RBF/cv.html"];
  estimPara [URL="GRENAT/src/surrogate/@RBF/estimPara.html"];
  eval [URL="GRENAT/src/surrogate/@RBF/eval.html"];
  fCompute [URL="GRENAT/src/surrogate/@RBF/fCompute.html"];
  getParaVal [URL="GRENAT/src/surrogate/@RBF/getParaVal.html"];
  loadDefaultConf [URL="GRENAT/src/surrogate/@RBF/loadDefaultConf.html"];
  manageOpt [URL="GRENAT/src/surrogate/@RBF/manageOpt.html"];
  setData [URL="GRENAT/src/surrogate/@RBF/setData.html"];
  showCV [URL="GRENAT/src/surrogate/@RBF/showCV.html"];
  showInfo [URL="GRENAT/src/surrogate/@RBF/showInfo.html"];
  train [URL="GRENAT/src/surrogate/@RBF/train.html"];
  trainUpdate [URL="GRENAT/src/surrogate/@RBF/trainUpdate.html"];
  update [URL="GRENAT/src/surrogate/@RBF/update.html"];
  updateData [URL="GRENAT/src/surrogate/@RBF/updateData.html"];
  SVR [URL="GRENAT/src/surrogate/@SVR/SVR.html"];
  addGrad [URL="GRENAT/src/surrogate/@SVR/addGrad.html"];
  addResp [URL="GRENAT/src/surrogate/@SVR/addResp.html"];
  addSample [URL="GRENAT/src/surrogate/@SVR/addSample.html"];
  buildMatrix [URL="GRENAT/src/surrogate/@SVR/buildMatrix.html"];
  checkMiss [URL="GRENAT/src/surrogate/@SVR/checkMiss.html"];
  checkNewMiss [URL="GRENAT/src/surrogate/@SVR/checkNewMiss.html"];
  compute [URL="GRENAT/src/surrogate/@SVR/compute.html"];
  computeVariance [URL="GRENAT/src/surrogate/@SVR/computeVariance.html"];
  coreClassical [URL="GRENAT/src/surrogate/@SVR/coreClassical.html"];
  cv [URL="GRENAT/src/surrogate/@SVR/cv.html"];
  estimPara [URL="GRENAT/src/surrogate/@SVR/estimPara.html"];
  eval [URL="GRENAT/src/surrogate/@SVR/eval.html"];
  fCompute [URL="GRENAT/src/surrogate/@SVR/fCompute.html"];
  getParaVal [URL="GRENAT/src/surrogate/@SVR/getParaVal.html"];
  loadDefaultConf [URL="GRENAT/src/surrogate/@SVR/loadDefaultConf.html"];
  manageOpt [URL="GRENAT/src/surrogate/@SVR/manageOpt.html"];
  sb [URL="GRENAT/src/surrogate/@SVR/sb.html"];
  setData [URL="GRENAT/src/surrogate/@SVR/setData.html"];
  showCV [URL="GRENAT/src/surrogate/@SVR/showCV.html"];
  showInfo [URL="GRENAT/src/surrogate/@SVR/showInfo.html"];
  train [URL="GRENAT/src/surrogate/@SVR/train.html"];
  trainUpdate [URL="GRENAT/src/surrogate/@SVR/trainUpdate.html"];
  update [URL="GRENAT/src/surrogate/@SVR/update.html"];
  updateData [URL="GRENAT/src/surrogate/@SVR/updateData.html"];
  addGrad [URL="GRENAT/src/surrogate/@xLS/addGrad.html"];
  addResp [URL="GRENAT/src/surrogate/@xLS/addResp.html"];
  addSample [URL="GRENAT/src/surrogate/@xLS/addSample.html"];
  buildFunPoly [URL="GRENAT/src/surrogate/@xLS/buildFunPoly.html"];
  buildMatrixNonS [URL="GRENAT/src/surrogate/@xLS/buildMatrixNonS.html"];
  checkMiss [URL="GRENAT/src/surrogate/@xLS/checkMiss.html"];
  checkNewMiss [URL="GRENAT/src/surrogate/@xLS/checkNewMiss.html"];
  compute [URL="GRENAT/src/surrogate/@xLS/compute.html"];
  eval [URL="GRENAT/src/surrogate/@xLS/eval.html"];
  manageOpt [URL="GRENAT/src/surrogate/@xLS/manageOpt.html"];
  setData [URL="GRENAT/src/surrogate/@xLS/setData.html"];
  showInfo [URL="GRENAT/src/surrogate/@xLS/showInfo.html"];
  train [URL="GRENAT/src/surrogate/@xLS/train.html"];
  trainUpdate [URL="GRENAT/src/surrogate/@xLS/trainUpdate.html"];
  update [URL="GRENAT/src/surrogate/@xLS/update.html"];
  updateData [URL="GRENAT/src/surrogate/@xLS/updateData.html"];
  xLS [URL="GRENAT/src/surrogate/@xLS/xLS.html"];
  EstimPara [URL="GRENAT/src/surrogate/EstimPara.html"];
  PrepIn [URL="GRENAT/src/surrogate/PrepIn.html"];
  definePara [URL="GRENAT/src/surrogate/definePara.html"];
  stopEstim [URL="GRENAT/src/surrogate/stopEstim.html"];
  testXLS [URL="GRENAT/src/surrogate/testXLS.html"];
  MissData [URL="GRENAT/src/various/@MissData/MissData.html"];
  addData [URL="GRENAT/src/various/@MissData/addData.html"];
  addGrad [URL="GRENAT/src/various/@MissData/addGrad.html"];
  addResp [URL="GRENAT/src/various/@MissData/addResp.html"];
  addSampling [URL="GRENAT/src/various/@MissData/addSampling.html"];
  check [URL="GRENAT/src/various/@MissData/check.html"];
  checkGrad [URL="GRENAT/src/various/@MissData/checkGrad.html"];
  checkResp [URL="GRENAT/src/various/@MissData/checkResp.html"];
  removeGM [URL="GRENAT/src/various/@MissData/removeGM.html"];
  removeGRM [URL="GRENAT/src/various/@MissData/removeGRM.html"];
  removeGRV [URL="GRENAT/src/various/@MissData/removeGRV.html"];
  removeGV [URL="GRENAT/src/various/@MissData/removeGV.html"];
  removeRM [URL="GRENAT/src/various/@MissData/removeRM.html"];
  removeRV [URL="GRENAT/src/various/@MissData/removeRV.html"];
  show [URL="GRENAT/src/various/@MissData/show.html"];
  Norm [URL="GRENAT/src/various/@NormRenorm/Norm.html"];
  NormG [URL="GRENAT/src/various/@NormRenorm/NormG.html"];
  NormRenorm [URL="GRENAT/src/various/@NormRenorm/NormRenorm.html"];
  addGrad [URL="GRENAT/src/various/@NormRenorm/addGrad.html"];
  addResp [URL="GRENAT/src/various/@NormRenorm/addResp.html"];
  addSampling [URL="GRENAT/src/various/@NormRenorm/addSampling.html"];
  checkStCl [URL="GRENAT/src/various/@NormRenorm/checkStCl.html"];
  choiceData [URL="GRENAT/src/various/@NormRenorm/choiceData.html"];
  computeNorm [URL="GRENAT/src/various/@NormRenorm/computeNorm.html"];
  init [URL="GRENAT/src/various/@NormRenorm/init.html"];
  loadConf [URL="GRENAT/src/various/@NormRenorm/loadConf.html"];
  reNorm [URL="GRENAT/src/various/@NormRenorm/reNorm.html"];
  reNormDiff [URL="GRENAT/src/various/@NormRenorm/reNormDiff.html"];
  reNormG [URL="GRENAT/src/various/@NormRenorm/reNormG.html"];
  reNormVar [URL="GRENAT/src/various/@NormRenorm/reNormVar.html"];
  checkLoadDef [URL="GRENAT/src/various/@execParallel/checkLoadDef.html"];
  checkRun [URL="GRENAT/src/various/@execParallel/checkRun.html"];
  currentConf [URL="GRENAT/src/various/@execParallel/currentConf.html"];
  defNumWorkers [URL="GRENAT/src/various/@execParallel/defNumWorkers.html"];
  defaultConf [URL="GRENAT/src/various/@execParallel/defaultConf.html"];
  execParallel [URL="GRENAT/src/various/@execParallel/execParallel.html"];
  getDefNumWorkers [URL="GRENAT/src/various/@execParallel/getDefNumWorkers.html"];
  start [URL="GRENAT/src/various/@execParallel/start.html"];
  stop [URL="GRENAT/src/various/@execParallel/stop.html"];
  ExecQP [URL="GRENAT/src/various/ExecQP.html"];
  Gfprintf [URL="GRENAT/src/various/Gfprintf.html"];
  buildDisp [URL="GRENAT/src/various/buildDisp.html"];
  buildDocGRENAT [URL="GRENAT/src/various/buildDocGRENAT.html"];
  checkInterpRG [URL="GRENAT/src/various/checkInterpRG.html"];
  customClean [URL="GRENAT/src/various/customClean.html"];
  dispTableTwoColumns [URL="GRENAT/src/various/dispTableTwoColumns.html"];
  dispTableTwoColumnsStruct [URL="GRENAT/src/various/dispTableTwoColumnsStruct.html"];
  dispTxtOnOff [URL="GRENAT/src/various/dispTxtOnOff.html"];
  evalFunGrad [URL="GRENAT/src/various/evalFunGrad.html"];
  example2D [URL="GRENAT/src/various/example2D.html"];
  isOctave [URL="GRENAT/src/various/isOctave.html"];
  listFilesToolboxGRENAT [URL="GRENAT/src/various/listFilesToolboxGRENAT.html"];
  mesuTime [URL="GRENAT/src/various/mesuTime.html"];
  modWarning [URL="GRENAT/src/various/modWarning.html"];
  statusParallel [URL="GRENAT/src/various/statusParallel.html"];
  textProgressbar [URL="GRENAT/src/various/textProgressbar.html"];
}